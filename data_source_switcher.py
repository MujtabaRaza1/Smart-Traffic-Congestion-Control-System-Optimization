#!/usr/bin/env python3
"""
Data Source Switcher

This script allows switching between different data sources:
1. Original synthetic data (generated by main.py)
2. Kaggle xtraffic dataset (adapted to match our format)
"""

import os
import sys
import shutil
import argparse
from pathlib import Path
import pandas as pd

# Add project root to path
sys.path.append(str(Path(__file__).parent))

def backup_current_data():
    """Back up the current data files."""
    data_dir = Path(__file__).parent / "data"
    
    # Ensure backup directory exists
    backup_dir = data_dir / "backup"
    os.makedirs(backup_dir, exist_ok=True)
    
    # Backup files
    files_to_backup = ["synthetic_traffic_data.csv", "road_network_data.csv"]
    for file in files_to_backup:
        source = data_dir / file
        target = backup_dir / file
        
        if source.exists():
            print(f"Backing up {file}...")
            shutil.copy2(source, target)
    
    print("Backup complete.")

def switch_to_synthetic():
    """Switch to original synthetic data."""
    print("Switching to original synthetic data...")
    
    # First backup current data
    backup_current_data()
    
    # Generate synthetic data using main.py
    from main import main as main_process
    
    # Run with data generation enabled
    main_process_args = argparse.Namespace(
        generate_data=True,
        days=30,
        roads=20,
        skip_training=False
    )
    main_process(main_process_args)
    
    print("Successfully switched to original synthetic data.")

def switch_to_kaggle():
    """Switch to Kaggle xtraffic dataset."""
    print("Switching to Kaggle xtraffic dataset...")
    
    # First backup current data
    backup_current_data()
    
    # Use kaggle_data_adapter to fetch and adapt Kaggle data
    from data.kaggle_data_adapter import main as kaggle_adapter_main
    kaggle_adapter_main()
    
    print("Successfully switched to Kaggle xtraffic dataset.")

def restore_backup():
    """Restore data from backup."""
    print("Restoring data from backup...")
    
    data_dir = Path(__file__).parent / "data"
    backup_dir = data_dir / "backup"
    
    if not backup_dir.exists():
        print("No backup directory found.")
        return False
    
    # Restore files
    files_to_restore = ["synthetic_traffic_data.csv", "road_network_data.csv"]
    restored = False
    for file in files_to_restore:
        source = backup_dir / file
        target = data_dir / file
        
        if source.exists():
            print(f"Restoring {file}...")
            shutil.copy2(source, target)
            restored = True
    
    if restored:
        print("Backup restored successfully.")
    else:
        print("No backup files found.")
    
    return restored

def main():
    """Main function to switch data sources."""
    parser = argparse.ArgumentParser(description='Switch between different data sources')
    
    # Add arguments
    parser.add_argument('--source', '-s', type=str, choices=['synthetic', 'kaggle', 'backup'],
                      default='synthetic', help='Data source to use (default: synthetic)')
    
    args = parser.parse_args()
    
    if args.source == 'synthetic':
        switch_to_synthetic()
    elif args.source == 'kaggle':
        switch_to_kaggle()
    elif args.source == 'backup':
        restore_backup()
    else:
        print(f"Unknown data source: {args.source}")
        print("Available options: synthetic, kaggle, backup")

if __name__ == "__main__":
    main() 